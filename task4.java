/*У мальчика Олега сегодня День Рождения, ему исполняется 10 лет. Так как 10 лет особый возраст, то родители подарили ему особый подарок: массив из чисел от 1 до 10. Обрадовавшись такому подарку, он сразу начал изучать его свойства.
Недавно на прогулке друзья рассказали Олегу о арифметических прогрессиях. Для изучения свойств массива Олег решил начать с чего-то малого, а именно с арифметических прогрессий длиной 3. Три числа  образуют арифметическую прогрессию, если  Оказалось, что не все подотрезки массива могут содержать такие арифметические прогрессии, поэтому Олег решил вначале узнать, сколько существует подотрезков, в которых можно выбрать три числа, не меняя их порядок, с нужным свойством.
Подотрезком массива  от  до  называется массив из элементов
Формат входных данных
В первой строке входных данных дано число  длина массива Олега
Во второй строке даны  целых чисел  подаренный массив
Формат выходных данных
Выведите, сколько существует интересующих Олега подотрезков.
Замечание
В примере подходят подотрезки (1,3), (1, 4), (1, 5).

ввод
5
1 2 3 3 2
вывод
3*/
import java.util.Scanner;

public class task4 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = scanner.nextInt();
        }

        int count = 0;

        // Перебираем все подотрезки длиной от 3 до n
        for (int len = 3; len <= n; len++) {
            for (int i = 0; i <= n - len; i++) {
                int j = i + len - 1;
                boolean found = false;

                // Проверяем все возможные тройки в подотрезке arr[i..j]
                for (int a = i; a <= j && !found; a++) {
                    for (int b = a + 1; b <= j && !found; b++) {
                        for (int c = b + 1; c <= j && !found; c++) {
                            if (2 * arr[b] == arr[a] + arr[c]) {
                                found = true;
                                count++;
                            }
                        }
                    }
                }
            }
        }

        System.out.println(count);
    }
}
